<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
	default-lazy-init="false">

	<description>Spring测试环境配置文件</description>

	<!-- 注解配置 -->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com">
		<!--不扫描 spring.config 和 web下的包-->
		<context:exclude-filter type="regex"
			expression="com.team.cmc.infrastructure.spring.config.*" />
		<context:exclude-filter type="regex"
			expression="com.team.cmc.interfaces.web.*" />
	</context:component-scan>

	<!-- 强制使用CGLIB代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 事务注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- component -->
	<bean class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>dozer/dozerBeanMapping.xml</value>
			</list>
		</property>
	</bean>


	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName"
			value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置-->
					<value>classpath*:/application.properties</value>
					
				<!-- 本地开发环境配置 
					<value>classpath*:/application.local.properties</value>-->
				
				<!-- 测试环境配置
				<value>classpath*:/application.test.properties</value>-->
				
				<!-- 
					本地测试环境配置 
					<value>classpath*:/application.test-local.properties</value>
				-->
			</list>
		</property>
	</bean>

	<!-- 数据源配置,在测试环境使用JDBC直接连接 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--  
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		-->
		<property name="hibernateProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="location"
					value="classpath:/hibernate/hibernate.properties" />
			</bean>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.team.cmc.domain.model</value>
			</list>
		</property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 上传文件服务器路径配置 -->
	<bean
		class="com.team.cmc.infrastructure.util.FilePathContextConfig">
		<property name="windows_image_upload_path" value="${imageWindowsPath}" />
		<property name="windows_attachment_upload_path" value="${videoWindowsPath}" />
		<property name="linux_image_upload_path" value="${imageLinuxPath}" />
		<property name="linux_attachment_upload_path" value="${videoLinuxPath}" />
	</bean>
	
	<!-- job -->
	<bean name="cleanAttachmentJob"
		class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>com.team.cmc.infrastructure.job.CleanAttachmentJob</value>
		</property>
	</bean>

	<!-- trigger -->
	<bean id="cleanAttachmentJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="cleanAttachmentJob" />
		</property>
		<property name="cronExpression">
			<value>30 * * * * ?</value>
		</property>
	</bean>

	<!-- Scheduler -->
	<bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cleanAttachmentJobTrigger" />
			</list>
		</property>
	</bean>
</beans>